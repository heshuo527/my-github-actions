# Workflow 名称
name: CI/CD for React App

# 定义权限
permissions:
  contents: write    # 允许写入代码和分支
  pages: write      # 允许部署到 GitHub Pages
  id-token: write   # 验证身份，部署 Pages 必需

# 定义触发事件
on:
  push:
    branches:
      - main        # 推送到 main 分支触发
  workflow_dispatch: # 支持手动触发

# 定义任务
jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest  # 在 Ubuntu 虚拟机上运行
    steps:
      # 步骤 1：检出代码
      - name: Checkout Code
        uses: actions/checkout@v4  # 拉取仓库代码

      # 步骤 2：设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4  # 安装 Node.js
        with:
          node-version: '18.x'  # 使用 Node.js 18.x

      # 步骤 3：安装项目依赖
      - name: Install Dependencies
        run: npm install  # 安装 package.json 的依赖

      # 步骤 4：构建项目
      - name: Build Project
        run: npm run build  # 生成 build 目录

      # 步骤 5：调试构建产物
      - name: Debug Build Files
        run: ls -la ./build && ls -la ./build/assets  # 确认 build 和 assets 目录内容

      # 步骤 6：上传 Pages artifact
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3  # 专为 Pages 的 Action
        with:
          name: github-pages  # artifact 名称必须为 github-pages
          path: ./build  # 上传 build 目录（包含 assets）
          if-no-files-found: error  # 如果路径无文件，报错

  # 部署任务
  deploy:
    needs: build  # 依赖 build 任务
    runs-on: ubuntu-latest
    environment:
      name: github-pages  # Pages 环境
      url: ${{ steps.deployment.outputs.page_url }}  # 部署后的 URL
    steps:
      # 步骤 1：部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # 部署到 Pages